{"version":3,"sources":["api/unsplash.js","components/ImageCard.js","components/useMedia.js","components/ImageList.js","components/SearchBar.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","ImageCard","this","props","image","urls","description","src","thumb","alt","React","Component","useMedia","queries","values","defaultValue","match","findIndex","q","matchMedia","matches","useState","value","set","useEffect","handler","window","addEventListener","removeEventListener","ImageList","items","setItems","gridItems","setGridItems","useMeasure","ref","width","columns","images","heights","Array","fill","map","child","column","indexOf","Math","min","x","y","height","transition","useTransition","from","enter","leave","update","config","mass","tension","friction","className","style","div","id","SearchBar","state","search","onFormSubmit","e","preventDefault","customOnSubmit","onSubmit","htmlFor","type","onChange","setState","target","App","onSearchSubmit","a","unsplash","get","params","query","per_page","response","data","results","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8aa35afa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization: \"Client-ID ip9VINb6ag56Prokh3J3ZyrWY_jnkCWRIvkJ0fWyu2k\",\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n\trender() {\r\n\t\tconst { urls, description } = this.props.image;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<img src={urls.thumb} alt={description} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ImageCard;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useMedia = (queries, values, defaultValue) => {\r\n\tconst match = () => {\r\n\t\treturn (\r\n\t\t\tvalues[queries.findIndex((q) => matchMedia(q).matches)] || defaultValue\r\n\t\t);\r\n\t};\r\n\r\n\tconst [value, set] = useState(match);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handler = () => set(match);\r\n\t\twindow.addEventListener(\"resize\", handler);\r\n\t\treturn () => window.removeEventListener(\"resize\", handler);\r\n\t}, []);\r\n\treturn value;\r\n};\r\n\r\nexport default useMedia;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport ImageCard from \"./ImageCard.js\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport useMedia from \"./useMedia\";\r\nimport useMeasure from \"react-use-measure\";\r\nimport \"./ImageList.css\";\r\n\r\nconst ImageList = (props) => {\r\n\tconst [items, setItems] = useState([]);\r\n\tconst [gridItems, setGridItems] = useState([]);\r\n\r\n\tconst [ref, { width }] = useMeasure();\r\n\r\n\tconst columns = useMedia(\r\n\t\t[\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"],\r\n\t\t[5, 4, 3],\r\n\t\t2\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetItems(props.images);\r\n\t}, [props]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet heights = new Array(columns).fill(0);\r\n\t\tsetGridItems(\r\n\t\t\titems.map((child) => {\r\n\t\t\t\tconst column = heights.indexOf(Math.min(...heights));\r\n\t\t\t\tconst x = (width / columns) * column;\r\n\t\t\t\tconst y = (heights[column] += child.height / 20) - child.height / 20;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...child,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\twidth: width / columns,\r\n\t\t\t\t\theight: child.height / 20,\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t);\r\n\t}, [columns, items, width]);\r\n\r\n\tconst transition = useTransition(gridItems, {\r\n\t\tfrom: { height: 0, y: 1000 },\r\n\t\tenter: ({ x, y, width, height }) => ({ x, y, width, height }),\r\n\t\tleave: { height: 0, y: 1000 },\r\n\t\tupdate: ({ x, y, width, height }) => ({ x, y, width, height }),\r\n\t\tconfig: { mass: 5, tension: 500, friction: 100 },\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"image-list\" ref={ref}>\r\n\t\t\t{transition((style, image) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<animated.div style={style}>\r\n\t\t\t\t\t\t<ImageCard key={image.id} image={image} />\r\n\t\t\t\t\t</animated.div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n\tstate = { search: \"\" };\r\n\r\n\tonFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.customOnSubmit(this.state.search);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ui segment\">\r\n\t\t\t\t<form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t<label htmlFor=\"searchbar\">\r\n\t\t\t\t\t\t\t<h3>Unsplash Image Search</h3>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid=\"searchbar\"\r\n\t\t\t\t\t\t\tvalue={this.state.search}\r\n\t\t\t\t\t\t\tonChange={(e) => this.setState({ search: e.target.value })}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport ImageList from \"./ImageList\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nclass App extends React.Component {\r\n\tstate = { images: [] };\r\n\r\n\tonSearchSubmit = async (search) => {\r\n\t\tconst response = await unsplash.get(\"/search/photos\", {\r\n\t\t\tparams: { query: search, per_page: 20 },\r\n\t\t});\r\n\t\tthis.setState({ images: response.data.results });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ui container\">\r\n\t\t\t\t<SearchBar customOnSubmit={this.onSearchSubmit} />\r\n\t\t\t\t<ImageList images={this.state.images} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}